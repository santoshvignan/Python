    parser = argparse.ArgumentParser()
    parser.add_argument("-ip",required=True,type=str,help="Enter the vManage ip information")
    parser.add_argument("-u",required=True,type=str,help="Enter the username for vManage")
    parser.add_argument("-p",required=True,type=str,help="Enter the password for vManage")
    parser.add_argument("-sw",required=True,type=str,help="Enter the software version we want to upgrade")

    get_active_tasks_in_progress = requests.get(active_tasks_url, headers=headers, verify=False)
            if get_active_tasks_in_progress.status_code == 200:
                print(get_active_tasks_in_progress.json())
                if get_active_tasks_in_progress.json()['data']['activeTaskCount'] > 0:
                    tasks_url = login_url + "dataservice/device/action/status/tasks"
                    get_tasks_in_progress = requests.get(tasks_url, headers=headers, verify=False)
                    if get_tasks_in_progress.status_code != 200:
                        is_vManage_GUI_UP = False
                    else:
                        pid = get_tasks_in_progress.json()['runningTasks'][0]['processId']
                        # pid = get_tasks_in_progress.json()
                        print(pid)
                mon_sw_task_url = login_url + "dataservice/device/action/status/" + pid
                print(mon_sw_task_url)
                if mon_sw_task_url.status_code != 200:
                    is_vManage_GUI_UP = False
                else:
                    while sw_activate_status == False:
                        mon_sw_task = requests.get(mon_sw_task_url, headers=headers, verify=False)
                        # print (mon_sw_task.json())
                        if mon_sw_task.status_code != 200:
                            is_vManage_GUI_UP == False
                        else:
                            sw_act_task_status = mon_sw_task.json()
                            print(sw_act_task_status['data'][0]['status'])
                            if sw_act_task_status['data'][0]['status'] == 'Success':
                                sw_activate_status = True
                                print("Software has been successfully activated")
                            elif sw_act_task_status['data'][0]['status'] == "Failure":
                                print("Software Activation has Failed")
                                sys.exit()
                            time.sleep(10)